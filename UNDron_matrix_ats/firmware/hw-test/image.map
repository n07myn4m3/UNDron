
Allocating common symbols
Common symbol       size              file

isr_table           0x80              soc-hw.o
tic_msec            0x4               soc-hw.o

Memory Configuration

Name             Origin             Length             Attributes
ram              0x00000000         0x00004000
*default*        0x00000000         0xffffffff

Linker script and memory map

                0x00000000                __DYNAMIC = 0x0
                0x00000000                _RAM_START = 0x0
                0x00004000                _RAM_SIZE = 0x4000
                0x00004000                _RAM_END = (_RAM_START + _RAM_SIZE)

.text           0x00000000      0x558
                0x00000000                _ftext = .
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x00000000      0x208 crt0ram.o
                0x00000200                get_gp
                0x000001f8                get_sp
                0x00000140                irq_enable
                0x00000160                irq_get_mask
                0x00000000                _start
                0x00000168                jump
                0x00000158                irq_set_mask
                0x0000014c                irq_disable
                0x0000016c                halt
 .text          0x00000208       0x80 main.o
                0x00000208                main
 .text          0x00000288      0x2d0 soc-hw.o
                0x000003cc                tic_isr
                0x0000048c                uart_putstr
                0x000004e8                i2c_test_ucr
                0x0000032c                isr_unregister
                0x000004c4                i2c_test_wxrx
                0x00000388                nsleep
                0x00000444                uart_getchar
                0x0000050c                pwm_init
                0x00000440                uart_init
                0x00000314                isr_register
                0x000002f0                isr_init
                0x0000028c                irq_handler
                0x00000288                isr_null
                0x00000528                pwm_duty
                0x000003f8                tic_init
                0x00000540                pwm_enable
                0x0000034c                msleep
                0x00000468                uart_putchar
                0x00000558                _etext = .

.rodata         0x00000558        0x0
                0x00000558                . = ALIGN (0x4)
                0x00000558                _frodata = .
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 *(.rodata1)
                0x00000558                _erodata = .

.data           0x00000558       0x18
                0x00000558                . = ALIGN (0x4)
                0x00000558                _fdata = .
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00000558        0x0 crt0ram.o
 .data          0x00000558        0x0 main.o
 .data          0x00000558       0x18 soc-hw.o
                0x00000558                uart0
                0x00000568                i2c0
                0x0000055c                timer0
                0x00000560                gpio0
                0x0000056c                pwm0
                0x00000564                spi0
 *(.data1)
                0x00000570                _gp = ALIGN (0x10)
 *(.sdata .sdata.* .gnu.linkonce.s.*)
                0x00000570                _edata = .

.bss            0x00000570       0x88
                0x00000570                . = ALIGN (0x4)
                0x00000570                _fbss = .
 *(.dynsbss)
 *(.sbss .sbss.* .gnu.linkonce.sb.*)
 *(.scommon)
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000570        0x0 crt0ram.o
 .bss           0x00000570        0x0 main.o
 .bss           0x00000570        0x1 soc-hw.o
 *(COMMON)
 *fill*         0x00000571        0x3 00
 COMMON         0x00000574       0x84 soc-hw.o
                0x00000574                isr_table
                0x000005f4                tic_msec
                0x000005f8                _ebss = .
                0x000005f8                _end = .
                0x00003ffc                PROVIDE (_fstack, 0x3ffc)
LOAD crt0ram.o
LOAD main.o
LOAD soc-hw.o
OUTPUT(image elf32-lm32)

.debug_abbrev   0x00000000      0x227
 .debug_abbrev  0x00000000       0x3f main.o
 .debug_abbrev  0x0000003f      0x1e8 soc-hw.o

.debug_info     0x00000000      0x644
 .debug_info    0x00000000       0x58 main.o
 .debug_info    0x00000058      0x5ec soc-hw.o

.debug_line     0x00000000      0x45a
 .debug_line    0x00000000       0xcb main.o
 .debug_line    0x000000cb      0x38f soc-hw.o

.debug_frame    0x00000000      0x150
 .debug_frame   0x00000000       0x20 main.o
 .debug_frame   0x00000020      0x130 soc-hw.o

.debug_pubnames
                0x00000000      0x18b
 .debug_pubnames
                0x00000000       0x1b main.o
 .debug_pubnames
                0x0000001b      0x170 soc-hw.o

.debug_aranges  0x00000000       0x40
 .debug_aranges
                0x00000000       0x20 main.o
 .debug_aranges
                0x00000020       0x20 soc-hw.o

.debug_str      0x00000000      0x24d
 .debug_str     0x00000000       0x85 main.o
                                 0x91 (size before relaxing)
 .debug_str     0x00000085      0x1c8 soc-hw.o
                                0x268 (size before relaxing)

.comment        0x00000000       0x24
 .comment       0x00000000       0x12 main.o
 .comment       0x00000012       0x12 soc-hw.o

.debug_loc      0x00000000       0xd7
 .debug_loc     0x00000000       0xd7 soc-hw.o

.debug_ranges   0x00000000       0x20
 .debug_ranges  0x00000000       0x20 soc-hw.o
