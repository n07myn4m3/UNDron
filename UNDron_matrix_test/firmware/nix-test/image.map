
Allocating common symbols
Common symbol       size              file

isr_table           0x80              soc-hw.o
tic_msec            0x4               soc-hw.o

Memory Configuration

Name             Origin             Length             Attributes
ram              0x00000000         0x00001000
*default*        0x00000000         0xffffffff

Linker script and memory map

                0x00000000                __DYNAMIC = 0x0
                0x00000000                _RAM_START = 0x0
                0x00001000                _RAM_SIZE = 0x1000
                0x00001000                _RAM_END = (_RAM_START + _RAM_SIZE)

.text           0x00000000      0x56c
                0x00000000                _ftext = .
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x00000000      0x208 crt0ram.o
                0x00000200                get_gp
                0x000001f8                get_sp
                0x00000140                irq_enable
                0x00000160                irq_get_mask
                0x00000000                _start
                0x00000168                jump
                0x00000158                irq_set_mask
                0x0000014c                irq_disable
                0x0000016c                halt
 .text          0x00000208       0x6c main.o
                0x00000208                main
 .text          0x00000274      0x2f8 soc-hw.o
                0x00000530                everloop_leds
                0x000003b8                tic_isr
                0x000004d4                everloop_leds_on
                0x00000478                uart_putstr
                0x00000318                isr_unregister
                0x00000500                everloop_leds_off
                0x00000374                nsleep
                0x00000430                uart_getchar
                0x0000042c                uart_init
                0x00000300                isr_register
                0x00000554                everloop_read_sw
                0x000002dc                isr_init
                0x00000278                irq_handler
                0x00000274                isr_null
                0x000003e4                tic_init
                0x00000338                msleep
                0x00000454                uart_putchar
                0x000004b0                everloop_init
                0x0000056c                _etext = .

.rodata         0x0000056c        0x0
                0x0000056c                . = ALIGN (0x4)
                0x0000056c                _frodata = .
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 *(.rodata1)
                0x0000056c                _erodata = .

.data           0x0000056c       0x14
                0x0000056c                . = ALIGN (0x4)
                0x0000056c                _fdata = .
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0000056c        0x0 crt0ram.o
 .data          0x0000056c        0x0 main.o
 .data          0x0000056c       0x14 soc-hw.o
                0x0000056c                uart0
                0x00000570                timer0
                0x00000574                gpio0
                0x0000057c                everloop0
                0x00000578                spi0
 *(.data1)
                0x00000580                _gp = ALIGN (0x10)
 *(.sdata .sdata.* .gnu.linkonce.s.*)
                0x00000580                _edata = .

.bss            0x00000580       0x88
                0x00000580                . = ALIGN (0x4)
                0x00000580                _fbss = .
 *(.dynsbss)
 *(.sbss .sbss.* .gnu.linkonce.sb.*)
 *(.scommon)
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000580        0x0 crt0ram.o
 .bss           0x00000580        0x0 main.o
 .bss           0x00000580        0x4 soc-hw.o
 *(COMMON)
 COMMON         0x00000584       0x84 soc-hw.o
                0x00000584                isr_table
                0x00000604                tic_msec
                0x00000608                _ebss = .
                0x00000608                _end = .
                0x00000ffc                PROVIDE (_fstack, 0xffc)
LOAD crt0ram.o
LOAD main.o
LOAD soc-hw.o
OUTPUT(image elf32-lm32)

.debug_abbrev   0x00000000      0x21a
 .debug_abbrev  0x00000000       0x3f main.o
 .debug_abbrev  0x0000003f      0x1db soc-hw.o

.debug_info     0x00000000      0x5f5
 .debug_info    0x00000000       0x58 main.o
 .debug_info    0x00000058      0x59d soc-hw.o

.debug_line     0x00000000      0x482
 .debug_line    0x00000000       0xc3 main.o
 .debug_line    0x000000c3      0x3bf soc-hw.o

.debug_frame    0x00000000      0x150
 .debug_frame   0x00000000       0x20 main.o
 .debug_frame   0x00000020      0x130 soc-hw.o

.debug_pubnames
                0x00000000      0x19f
 .debug_pubnames
                0x00000000       0x1b main.o
 .debug_pubnames
                0x0000001b      0x184 soc-hw.o

.debug_aranges  0x00000000       0x40
 .debug_aranges
                0x00000000       0x20 main.o
 .debug_aranges
                0x00000020       0x20 soc-hw.o

.debug_str      0x00000000      0x263
 .debug_str     0x00000000       0x87 main.o
                                 0x93 (size before relaxing)
 .debug_str     0x00000087      0x1dc soc-hw.o
                                0x283 (size before relaxing)

.comment        0x00000000       0x24
 .comment       0x00000000       0x12 main.o
 .comment       0x00000012       0x12 soc-hw.o

.debug_loc      0x00000000       0xfd
 .debug_loc     0x00000000       0xfd soc-hw.o

.debug_ranges   0x00000000       0x20
 .debug_ranges  0x00000000       0x20 soc-hw.o
