
Allocating common symbols
Common symbol       size              file

isr_table           0x80              soc-hw.o
tic_msec            0x4               soc-hw.o

Memory Configuration

Name             Origin             Length             Attributes
ram              0x00000000         0x00004000
*default*        0x00000000         0xffffffff

Linker script and memory map

                0x00000000                __DYNAMIC = 0x0
                0x00000000                _RAM_START = 0x0
                0x00001000                _RAM_SIZE = 0x1000
                0x00001000                _RAM_END = (_RAM_START + _RAM_SIZE)

.text           0x00000000      0x658
                0x00000000                _ftext = .
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x00000000      0x208 crt0ram.o
                0x00000200                get_gp
                0x000001f8                get_sp
                0x00000140                irq_enable
                0x00000160                irq_get_mask
                0x00000000                _start
                0x00000168                jump
                0x00000158                irq_set_mask
                0x0000014c                irq_disable
                0x0000016c                halt
 .text          0x00000208       0x4c main.o
                0x00000208                main
 .text          0x00000254      0x404 soc-hw.o
                0x0000061c                everloop_leds
                0x00000398                tic_isr
                0x000005c0                everloop_leds_on
                0x00000458                uart_putstr
                0x0000053c                i2c_sleep
                0x000002f8                isr_unregister
                0x000005ec                everloop_leds_off
                0x00000354                nsleep
                0x00000410                uart_getchar
                0x0000040c                uart_init
                0x000002e0                isr_register
                0x000004e0                i2c_putdatas
                0x00000640                everloop_read_sw
                0x000002bc                isr_init
                0x00000524                i2c_init
                0x00000258                irq_handler
                0x00000254                isr_null
                0x000003c4                tic_init
                0x000004b8                i2c_putrwaddr
                0x00000490                i2c_putchar
                0x0000056c                i2c_getdata
                0x00000318                msleep
                0x00000434                uart_putchar
                0x0000059c                everloop_init
                0x00000658                _etext = .

.rodata         0x00000658       0x18
                0x00000658                . = ALIGN (0x4)
                0x00000658                _frodata = .
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata.str1.4
                0x00000658       0x18 main.o
 *(.rodata1)
                0x00000670                _erodata = .

.data           0x00000670       0x18
                0x00000670                . = ALIGN (0x4)
                0x00000670                _fdata = .
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00000670        0x0 crt0ram.o
 .data          0x00000670        0x0 main.o
 .data          0x00000670       0x18 soc-hw.o
                0x00000670                uart0
                0x00000680                i2c0
                0x00000674                timer0
                0x00000678                gpio0
                0x00000684                everloop0
                0x0000067c                spi0
 *(.data1)
                0x00000690                _gp = ALIGN (0x10)
 *(.sdata .sdata.* .gnu.linkonce.s.*)
                0x00000688                _edata = .

.bss            0x00000688       0x8c
                0x00000688                . = ALIGN (0x4)
                0x00000688                _fbss = .
 *(.dynsbss)
 *(.sbss .sbss.* .gnu.linkonce.sb.*)
 *(.scommon)
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000688        0x0 crt0ram.o
 .bss           0x00000688        0x0 main.o
 .bss           0x00000688        0x8 soc-hw.o
 *(COMMON)
 COMMON         0x00000690       0x84 soc-hw.o
                0x00000690                isr_table
                0x00000710                tic_msec
                0x00000714                _ebss = .
                0x00000714                _end = .
                0x00003ffc                PROVIDE (_fstack, 0x3ffc)
LOAD crt0ram.o
LOAD main.o
LOAD soc-hw.o
OUTPUT(image elf32-lm32)

.debug_abbrev   0x00000000      0x21a
 .debug_abbrev  0x00000000       0x3f main.o
 .debug_abbrev  0x0000003f      0x1db soc-hw.o

.debug_info     0x00000000      0x743
 .debug_info    0x00000000       0x58 main.o
 .debug_info    0x00000058      0x6eb soc-hw.o

.debug_line     0x00000000      0x55e
 .debug_line    0x00000000       0x8b main.o
 .debug_line    0x0000008b      0x4d3 soc-hw.o

.debug_frame    0x00000000      0x1b0
 .debug_frame   0x00000000       0x20 main.o
 .debug_frame   0x00000020      0x190 soc-hw.o

.debug_pubnames
                0x00000000      0x206
 .debug_pubnames
                0x00000000       0x1b main.o
 .debug_pubnames
                0x0000001b      0x1eb soc-hw.o

.debug_aranges  0x00000000       0x40
 .debug_aranges
                0x00000000       0x20 main.o
 .debug_aranges
                0x00000020       0x20 soc-hw.o

.debug_str      0x00000000      0x2bf
 .debug_str     0x00000000       0x87 main.o
                                 0x93 (size before relaxing)
 .debug_str     0x00000087      0x238 soc-hw.o
                                0x2eb (size before relaxing)

.comment        0x00000000       0x24
 .comment       0x00000000       0x12 main.o
 .comment       0x00000012       0x12 soc-hw.o

.debug_loc      0x00000000      0x15f
 .debug_loc     0x00000000      0x15f soc-hw.o

.debug_ranges   0x00000000       0x38
 .debug_ranges  0x00000000       0x38 soc-hw.o
